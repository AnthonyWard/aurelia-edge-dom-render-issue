{"version":3,"sources":["app.js","environment.js","main.js","resources/index.js"],"names":["App","things","id","name","optional","undefined","selectedThings","debug","testing","configure","Promise","config","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot"],"mappings":";;;;;;;;;;;;;QAAaA,cAAAA,MACT,eAAc;AAAA;;AACV,aAAKC,MAAL,GAAc,CACV,EAAEC,IAAI,CAAN,EAASC,MAAM,+BAAf,EAAgDC,UAAU,kBAA1D,EADU,EAEV,EAAEF,IAAI,CAAN,EAASC,MAAM,wCAAf,EAFU,EAGV,EAAED,IAAI,CAAN,EAASC,MAAM,mCAAf,EAAoDC,UAAU,IAA9D,EAHU,EAIV,EAAEF,IAAI,CAAN,EAASC,MAAM,yCAAf,EAA0DC,UAAUC,SAApE,EAJU,EAKV,EAAEH,IAAI,CAAN,EAASC,MAAM,4CAAf,EAA6DC,UAAU,EAAvE,EALU,EAMV,EAAEF,IAAI,CAAN,EAASC,MAAM,gDAAf,EAAiEC,UAAU,GAA3E,EANU,CAAd;;AASA,aAAKE,cAAL,GAAsB,IAAtB;AACH;;;;;;;;oBCZU;AACbC,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCSCC,YAAAA;;;;;;;;;;AANhBC,UAAQC,MAAR,CAAe;AACbC,cAAU;AACRC,wBAAkB;AADV;AADG,GAAf;;AAMO,WAASJ,SAAT,CAAmBK,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYV,KAAhB,EAAuB;AACrBO,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYV,OAAhB,EAAyB;AACvBM,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMP,QAAQQ,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;UCvBeb,YAAAA;AAAT,WAASA,SAAT,CAAmBE,MAAnB,EAA2B,CAEjC","file":"app-bundle.js","sourcesContent":["export class App {\r\n    constructor() {\r\n        this.things = [\r\n            { id: 1, name: 'This has an optional property', optional: \"Hi, I'm optional\"  },\r\n            { id: 2, name: \"This doesn't have an optional property\" },\r\n            { id: 3, name: 'This has a null optional property', optional: null  },\r\n            { id: 4, name: 'This has an undefined optional property', optional: undefined  },\r\n            { id: 5, name: 'This has an empty string optional property', optional: \"\"  },\r\n            { id: 6, name: 'This has a whitespace string optional property', optional: \" \"  }\r\n        ];\r\n\r\n        this.selectedThings = null;\r\n    }\r\n}","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":"../src"}